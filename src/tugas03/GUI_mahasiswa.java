package tugas03;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class GUI_mahasiswa extends javax.swing.JFrame {

    private DefaultTableModel model;
    //List<Mahasiswa> mhs = new ArrayList<Mahasiswa>();

    /** Creates new form GUI_mahasiswa */
    public GUI_mahasiswa() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        field_nama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        field_nim = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        field_asal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        field_kelas = new javax.swing.JTextField();
        tombol_tambah = new javax.swing.JButton();
        tombol_ubah = new javax.swing.JButton();
        tombol_hapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tombol_tampil = new javax.swing.JButton();
        tombol_exit = new javax.swing.JButton();
        tombol_reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nama");

        jLabel2.setText("NIM");

        jLabel3.setText("Asal");

        jLabel4.setText("Kelas");

        tombol_tambah.setText("Tambah");
        tombol_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombol_tambahActionPerformed(evt);
            }
        });

        tombol_ubah.setText("Ubah");
        tombol_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombol_ubahActionPerformed(evt);
            }
        });

        tombol_hapus.setText("Hapus");
        tombol_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombol_hapusActionPerformed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Data Mahasiswa"
            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(51, 255, 51));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        tombol_tampil.setText("Tampilkan Semua");
        tombol_tampil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombol_tampilActionPerformed(evt);
            }
        });

        tombol_exit.setText("Keluar");
        tombol_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombol_exitActionPerformed(evt);
            }
        });

        tombol_reset.setText("Reset");
        tombol_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombol_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field_kelas, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_nim, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_asal, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tombol_reset))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tombol_tampil)
                        .addGap(18, 18, 18)
                        .addComponent(tombol_tambah)
                        .addGap(18, 18, 18)
                        .addComponent(tombol_ubah)
                        .addGap(18, 18, 18)
                        .addComponent(tombol_hapus)
                        .addGap(18, 18, 18)
                        .addComponent(tombol_exit))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(field_nim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(field_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(field_asal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(field_kelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tombol_tampil)
                    .addComponent(tombol_tambah)
                    .addComponent(tombol_ubah)
                    .addComponent(tombol_hapus)
                    .addComponent(tombol_exit)
                    .addComponent(tombol_reset))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-773)/2, (screenSize.height-298)/2, 773, 298);
    }// </editor-fold>//GEN-END:initComponents

    private void tombol_tampilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombol_tampilActionPerformed
        try {
            // TODO add your handling code here:
            tampil_data();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI_mahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tombol_tampilActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        try {
            // TODO add your handling code here:
            SerializationDemo demo = new SerializationDemo();
            List<Mahasiswa> newList = demo.deserialize("participantData.txt");

            int i = jTable1.getSelectedRow(); // mulai index 0

            int nim_e = newList.get(i).getNim();
            String nim_eDadiString = Integer.toString(nim_e);
            String nama_e = newList.get(i).getNama();
            String asal_e = newList.get(i).getAsal();
            String kelas_e = newList.get(i).getKelas();

            field_nim.setText(nim_eDadiString);
            field_nama.setText(nama_e);
            field_asal.setText(asal_e);
            field_kelas.setText(kelas_e);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI_mahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }



    }//GEN-LAST:event_jTable1MouseClicked

    private void tombol_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombol_ubahActionPerformed
        try {
            // TODO add your handling code here:
            List<Mahasiswa> mhs = new ArrayList<Mahasiswa>();
            SerializationDemo demo = new SerializationDemo();
            List<Mahasiswa> newList = demo.deserialize("participantData.txt");

            int i = jTable1.getSelectedRow();

            if (jTable1.isRowSelected(i)) {

                String nim_e = field_nim.getText();
                int nim_eDadiAngka = Integer.parseInt(nim_e);
                String nama_e = field_nama.getText();
                String asal_e = field_asal.getText();
                String kelas_e = field_kelas.getText();

                newList.set(i, new Mahasiswa(nim_eDadiAngka, nama_e, asal_e, kelas_e));

                for (int j = 0; j < newList.size(); j++) {
                    int nimDadiAngka = newList.get(j).getNim();
                    String inputNama = newList.get(j).getNama();
                    String inputAsal = newList.get(j).getAsal();
                    String inputKelas = newList.get(j).getKelas();
                    Mahasiswa group = new Mahasiswa(nimDadiAngka, inputNama, inputAsal, inputKelas);
                    mhs.add(group);
//
                }
                demo.serialize(mhs, "ParticipantData.txt");
                newList = demo.deserialize("participantData.txt");
                reset_text();
                JOptionPane.showMessageDialog(null, "Data Berhasil diubah");
                tampil_data();

            } else {
                JOptionPane.showMessageDialog(null, "Anda belum memilih data");
                tampil_data();
            }


        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI_mahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }




    }//GEN-LAST:event_tombol_ubahActionPerformed

    private void tombol_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombol_hapusActionPerformed
        try {

            // TODO add your handling code here:
            List<Mahasiswa> mhs = new ArrayList<Mahasiswa>();
            SerializationDemo demo = new SerializationDemo();
            int i = jTable1.getSelectedRow();

            if (jTable1.isRowSelected(i)) {

                // yg diolah harus newList
                //JOptionPane.showMessageDialog(null, i);
                List<Mahasiswa> newList = demo.deserialize("participantData.txt");
                if (JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Menghapus data ini ?", "Warning", 2) == JOptionPane.YES_OPTION) {
                    newList.remove(i);

                    for (int j = 0; j < newList.size(); j++) {
                        int nimDadiAngka = newList.get(j).getNim();
                        String inputNama = newList.get(j).getNama();
                        String inputAsal = newList.get(j).getAsal();
                        String inputKelas = newList.get(j).getKelas();

                        Mahasiswa group = new Mahasiswa(nimDadiAngka, inputNama, inputAsal, inputKelas);

                        mhs.add(group);

                    }

                    demo.serialize(mhs, "ParticipantData.txt");
                    newList = demo.deserialize("participantData.txt");

                    tampil_data();
                    reset_text();
                    JOptionPane.showMessageDialog(null, "Data berhasil Dihapus");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Anda belum memilih data");
                tampil_data();
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI_mahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_tombol_hapusActionPerformed

    private void tombol_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombol_tambahActionPerformed
        try {
            // TODO add your handling code here:
            //reset_text();
            List<Mahasiswa> mhs = new ArrayList<Mahasiswa>();
            SerializationDemo demo = new SerializationDemo();
            List<Mahasiswa> newList = demo.deserialize("participantData.txt");

            if (field_nim.getText().trim().equals("") || field_nama.getText().trim().equals("") || field_asal.getText().trim().equals("") || field_kelas.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Ada data yang belum anda isikan!");
                field_nim.requestFocus();
                field_nama.requestFocus();
                field_asal.requestFocus();
                field_kelas.requestFocus();
            } else {
                String nim_e = field_nim.getText();
                int nim_eDadiAngka = Integer.parseInt(nim_e);
                String nama_e = field_nama.getText();
                String asal_e = field_asal.getText();
                String kelas_e = field_kelas.getText();

                Mahasiswa nL = new Mahasiswa(nim_eDadiAngka, nama_e, asal_e, kelas_e);
                newList.add(nL);

                for (int j = 0; j < newList.size(); j++) {
                    int nimDadiAngka = newList.get(j).getNim();
                    String inputNama = newList.get(j).getNama();
                    String inputAsal = newList.get(j).getAsal();
                    String inputKelas = newList.get(j).getKelas();

                    Mahasiswa group = new Mahasiswa(nimDadiAngka, inputNama, inputAsal, inputKelas);

                    mhs.add(group);
//
                }
                demo.serialize(mhs, "ParticipantData.txt");
                newList = demo.deserialize("participantData.txt");
                reset_text();
                JOptionPane.showMessageDialog(null, "Data Berhasil ditambahkan");

                tampil_data();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI_mahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tombol_tambahActionPerformed

    private void tombol_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombol_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
}//GEN-LAST:event_tombol_exitActionPerformed

    private void tombol_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombol_resetActionPerformed
        // TODO add your handling code here:
        reset_text();
}//GEN-LAST:event_tombol_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI_mahasiswa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField field_asal;
    private javax.swing.JTextField field_kelas;
    private javax.swing.JTextField field_nama;
    private javax.swing.JTextField field_nim;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton tombol_exit;
    private javax.swing.JButton tombol_hapus;
    private javax.swing.JButton tombol_reset;
    private javax.swing.JButton tombol_tambah;
    private javax.swing.JButton tombol_tampil;
    private javax.swing.JButton tombol_ubah;
    // End of variables declaration//GEN-END:variables

    private void tampil_data() throws ClassNotFoundException {

        SerializationDemo demo = new SerializationDemo();
        List<Mahasiswa> newList = demo.deserialize("participantData.txt");

        Object[] baris = {"Data Mahasiswa"};
        model = new DefaultTableModel(null, baris);
        jTable1.setModel(model);
        int row = jTable1.getRowCount();
        for (int a = 0; a < row; a++) {
            model.removeRow(0);
        }


        for (int i = 0; i < newList.size(); i++) {

            Object[] data = {newList.get(i)};
            model.addRow(data);
        }
    }

    public void reset_text() {
        field_nim.setText("");
        field_nama.setText("");
        field_asal.setText("");
        field_kelas.setText("");
    }
}
